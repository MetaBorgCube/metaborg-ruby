module StatementTest

language Ruby

start symbol Program

test Undef ID [[undef testName]] parse succeeds
test Undef special token [[undef +]] parse succeeds
test Undef number [[undef 1]] parse fails
test Undef symbol [[undef :symb]] parse succeeds

// ALIAS

test Alias ID to ID [[alias testVar testVar2]] parse succeeds
test Alias same ID [[alias testVar testVar]] parse succeeds
test Alias ID to special token[[alias testVar +]] parse succeeds
test Alias special token to ID[[alias + testVar]] parse succeeds
test Alias special token to special token [[alias - +]] parse succeeds
test Alias same token [[alias + +]] parse succeeds
test Alias ID to keyword allowed [[alias testVar if]] parse succeeds
test Alias number to ID [[alias 1 testVar]] parse fails
test Alias ID to number [[alias testVar 1]] parse fails
test Alias number to number [[alias 1 2]] parse fails

// END

test End compound single statement [[END { alias a b }]] parse succeeds
test End compound multipe statements [[
	END {
		alias a b;
		alias c b;
	}
]] parse succeeds
test End number [[END { 1 }]] parse succeeds
test End token [[END { $ }]] parse fails
test End symbol [[END { :testSymbol }]] parse succeeds
test End lowercase [[end { alias a b }]] parse fails
